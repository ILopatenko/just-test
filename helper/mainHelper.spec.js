import { MainHelper } from './MainHelper';
import { expect, test as it } from '@playwright/test';

it.describe('Main Test Suite for MainHelper', () => {
   const helper = new MainHelper();
   it.describe('1. genRandomNumberBetween', () => {
      it.describe('  1.1. Test genRandomNumberBetween with default values [0; 99]', () => {
         const testQuantity = 500;
         const defaultMin = 0;
         const defaultMax = 99;
         let isMinGenerated = false;
         let isMaxGenerated = false;
         for (let i = 0; i < testQuantity; i++) {
            it(`     1.1.${i + 1}. Autogenerated test`, () => {
               const generatedNumber = helper.genRandomNumberBetween();
               console.log({ generatedNumber });
               if (generatedNumber === defaultMin) {
                  isMinGenerated = true;
                  console.log('MIN WAS GENERATED');
               }
               if (generatedNumber === defaultMax) {
                  isMaxGenerated = true;
                  console.log('MAX WAS GENERATED');
               }
               expect(generatedNumber).toBeGreaterThanOrEqual(defaultMin);
               expect(generatedNumber).toBeLessThanOrEqual(defaultMax);
            });
         }

         it(`     1.1.${testQuantity + 1}. Checking if MIN value was generated`, () => {
            expect(isMinGenerated).toBeTruthy();
         });

         it(`     1.1.${testQuantity + 2}. Checking if MAX value was generated`, () => {
            expect(isMaxGenerated).toBeTruthy();
         });
      });

      it.describe('  1.2. Test genRandomNumberBetween with custom values', () => {
         const testQuantity = 500;
         const customMin = helper.genRandomNumberBetween();
         const customMax = customMin * 2 + helper.genRandomNumberBetween();
         let isMinGenerated = false;
         let isMaxGenerated = false;
         for (let i = 0; i < testQuantity; i++) {
            it(`     1.2.${i + 1}. Autogenerated test`, () => {
               const generatedNumber = helper.genRandomNumberBetween(customMin, customMax);
               if (generatedNumber === customMin) {
                  isMinGenerated = true;
                  console.log('MIN WAS GENERATED');
               }
               if (generatedNumber === customMax) {
                  isMaxGenerated = true;
                  console.log('MAX WAS GENERATED');
               }
               console.log({ customMin, customMax, generatedNumber });
               expect(generatedNumber).toBeGreaterThanOrEqual(customMin);
               expect(generatedNumber).toBeLessThanOrEqual(customMax);
            });
         }

         it(`     1.1.${testQuantity + 1}. Checking if MIN value was generated`, () => {
            expect(isMinGenerated).toBeTruthy();
         });

         it(`     1.1.${testQuantity + 2}. Checking if MAX value was generated`, () => {
            expect(isMaxGenerated).toBeTruthy();
         });
      });
   });

   it.describe('2. getRandomItemFromArray', () => {
      const testQuantity = 100;
      for (let i = 0; i < testQuantity; i++) {
         const array = helper.data.sets.names.fn.women;
         it(`     2.${i + 1}. Autogenerated test`, () => {
            const randomItem = helper.getRandomItemFromArray(array);
            console.log({ randomItem });
            expect(array.includes(randomItem)).toBeTruthy();
         });
      }
   });
});
